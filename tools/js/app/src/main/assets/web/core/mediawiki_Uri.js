mw.loader.impl(function(){return["mediawiki.Uri@tgwm6",{"main":"Uri.js","files":{"Uri.js":function(require,module,exports){(function(){function cat(pre,val,post,raw){if(val===undefined||val===null||val===''){return'';}return pre+(raw?val:mw.Uri.encode(val))+post;}const parser={strict:require('./strict.regexp.js'),loose:require('./loose.regexp.js')};const properties=['protocol','user','password','host','port','path','query','fragment'];mw.UriRelative=function(documentLocation){const getDefaultUri=(function(){let href,uri;return function(){const hrefCur=typeof documentLocation==='string'?documentLocation:documentLocation();if(href===hrefCur){return uri;}href=hrefCur;uri=new Uri(href);return uri;};}());function Uri(uri,options){const hasOptions=(options!==undefined),defaultUri=getDefaultUri();options=typeof options==='object'?options:{strictMode:!!options};options=Object.assign({strictMode:false,overrideKeys:false,arrayParams:false},options);this.arrayParams=options.arrayParams;if(uri!==undefined&&uri!==null&&uri!==''){if(typeof uri==='string'){this.parse(uri,options);}else if(typeof uri==='object'){for(const prop in uri){
if(Object.prototype.hasOwnProperty.call(uri,prop)){if(Array.isArray(uri[prop])||$.isPlainObject(uri[prop])){this[prop]=$.extend(true,{},uri[prop]);}else{this[prop]=uri[prop];}}}if(!this.query){this.query={};}}}else if(hasOptions){const hrefCur=typeof documentLocation==='string'?documentLocation:documentLocation();this.parse(hrefCur,options);}else{return defaultUri.clone();}if(!this.protocol){this.protocol=defaultUri.protocol;}if(!this.host){this.host=defaultUri.host;if(!this.port){this.port=defaultUri.port;}}if(this.path&&this.path[0]!=='/'){throw new Error('Bad constructor arguments');}if(!(this.protocol&&this.host&&this.path)){throw new Error('Bad constructor arguments');}}Uri.encode=function(s){return encodeURIComponent(s).replace(/!/g,'%21').replace(/'/g,'%27').replace(/\(/g,'%28').replace(/\)/g,'%29').replace(/\*/g,'%2A').replace(/%20/g,'+');};Uri.decode=function(s){return decodeURIComponent(s.replace(/\+/g,'%20'));};Uri.prototype={parse:function(str,options){const uri=this,hasOwn=Object.prototype.hasOwnProperty;
const matches=parser[options.strictMode?'strict':'loose'].exec(str);properties.forEach((property,i)=>{uri[property]=matches[i+1];});const q={};if(uri.query){uri.query.replace(/(?:^|&)([^&=]*)(?:(=)([^&]*))?/g,(match,k,eq,v)=>{let arrayKeyMatch,i;if(k){k=Uri.decode(k);v=(eq===''||eq===undefined)?null:Uri.decode(v);arrayKeyMatch=k.match(/^([^[]+)\[(\d*)\]$/);if(options.arrayParams&&arrayKeyMatch){k=arrayKeyMatch[1];if(!Array.isArray(q[k])){q[k]=[];}i=arrayKeyMatch[2];if(i===''){i=q[k].length;}q[k][i]=v;}else if(options.arrayParams||options.overrideKeys||!hasOwn.call(q,k)){q[k]=v;}else{if(typeof q[k]==='string'){q[k]=[q[k]];}if(Array.isArray(q[k])){q[k].push(v);}}}});}uri.query=q;if(uri.fragment!==undefined){uri.fragment=decodeURIComponent(uri.fragment);}},getUserInfo:function(){return cat('',this.user,cat(':',this.password,''));},getHostPort:function(){return this.host+cat(':',this.port,'');},getAuthority:function(){return cat('',this.getUserInfo(),'@')+this.getHostPort();},
getQueryString:function(){const args=[],arrayParams=this.arrayParams;Object.keys(this.query).forEach((key)=>{const val=this.query[key];const k=Uri.encode(key),isArrayParam=Array.isArray(val),vals=isArrayParam?val:[val];vals.forEach((v,i)=>{let ki=k;if(arrayParams&&isArrayParam){ki+=Uri.encode('['+i+']');}if(v===null){args.push(ki);}else if(k==='title'){args.push(ki+'='+mw.util.wikiUrlencode(v));}else{args.push(ki+'='+Uri.encode(v));}});});return args.join('&');},getRelativePath:function(){return this.path+cat('?',this.getQueryString(),'',true)+cat('#',this.fragment,'');},toString:function(){return this.protocol+'://'+this.getAuthority()+this.getRelativePath();},clone:function(){return new Uri(this);},extend:function(parameters){for(const name in parameters){const parameter=parameters[name];if(parameter!==undefined){this.query[name]=parameter;}}return this;}};return Uri;};mw.Uri=mw.UriRelative(()=>location.href);}());
},"loose.regexp.js":function(require,module,exports){module.exports=/^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?(?:(?:([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?([^:\/?#]*)(?::(\d*))?((?:\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?[^?#\/]*)(?:\?([^#]*))?(?:\#(.*))?/;
},"strict.regexp.js":function(require,module,exports){module.exports=/^(?:([^:\/?#]+):)?(?:\/\/(?:(?:([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?([^:\/?#]*)(?::(\d*))?)?((?:[^?#\/]*\/)*[^?#]*)(?:\?([^#]*))?(?:\#(.*))?/;
}}},{},{},{},"This page is using the deprecated ResourceLoader module \"mediawiki.Uri\".\n[1.43] Please use browser native URL. See https://www.mediawiki.org/wiki/Migrating_mw.Uri_to_URL"];});
