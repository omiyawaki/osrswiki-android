package com.omiyawaki.osrswiki.page

import android.content.Context
import com.omiyawaki.osrswiki.theme.Theme
import java.io.BufferedReader
import java.io.InputStreamReader

/**
 * Builds a full HTML document from a content fragment, injecting necessary CSS and JavaScript.
 */
class PageHtmlBuilder(private val context: Context) {

    private val wikiContentCss: String by lazy { readAsset("styles/wiki_content.css") }
    private val tablesorterThemeCss: String by lazy { readAsset("styles/tablesorter.theme.default.css") }
    private val jqueryContent: String by lazy { readAsset("js/jquery.js") }
    private val tablesorterContent: String by lazy { readAsset("js/jquery.tablesorter.js") }

    fun buildFullHtmlDocument(title: String, bodyContent: String): String {
        val finalTitle = if (title.isBlank()) "OSRS Wiki" else title
        return """
            <!DOCTYPE html>
            <html>
            <head>
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>${finalTitle}</title>
                <style>
                    /* Main wiki content styles */
                    ${wikiContentCss}
                </style>
                <style>
                    /* Tablesorter theme styles */
                    ${tablesorterThemeCss}
                </style>
            </head>
            <body style="visibility: hidden;">
                $bodyContent
                <script>
                    ${jqueryContent}
                </script>
                <script>
                    ${tablesorterContent}
                </script>
                <script>
                    document.addEventListener('DOMContentLoaded', function() {
                        var tables = document.querySelectorAll('table.wikitable, table.align-right-2');
                        tables.forEach(function(table) {
                            if (table.parentElement.className !== 'scrollable-table-wrapper') {
                                var wrapper = document.createElement('div');
                                wrapper.className = 'scrollable-table-wrapper';
                                table.parentNode.insertBefore(wrapper, table);
                                wrapper.appendChild(table);
                            }
                        });

                        try {
                            var sortableTables = document.querySelectorAll('table.wikitable.sortable');
                            if (sortableTables.length > 0) {
                                console.log("Found " + sortableTables.length + " sortable tables. Initializing tablesorter.");
                                // The .tablesorter() call also applies the theme from the CSS.
                                $(sortableTables).tablesorter();
                                console.log("Tablesorter initialized successfully.");
                            } else {
                                console.log("No sortable tables found on this page.");
                            }
                        } catch (e) {
                            console.error("Error initializing tablesorter: " + e.message, e);
                        }
                    });
                </script>
            </body>
            </html>
        """.trimIndent()
    }

    private fun readAsset(assetPath: String): String {
        return try {
            context.assets.open(assetPath).use { inputStream ->
                BufferedReader(InputStreamReader(inputStream)).use { reader ->
                    reader.readText()
                }
            }
        } catch (e: Exception) {
            android.util.Log.e("PageHtmlBuilder", "Failed to read asset: $assetPath", e)
            ""
        }
    }
}
