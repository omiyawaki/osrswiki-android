package com.omiyawaki.osrswiki.page

import android.content.Context
import java.io.BufferedReader
import java.io.InputStreamReader

class PageHtmlBuilder(private val context: Context) {

    private val wikiContentCss: String by lazy { readAsset("styles/wiki_content.css") }
    private val tablesorterThemeCss: String by lazy { readAsset("styles/tablesorter.theme.blue.min.css") }
    private val jqueryJs: String by lazy { readAsset("js/jquery.min.js") }
    private val tablesorterJs: String by lazy { readAsset("js/jquery.tablesorter.min.js") }
    private val tablesorterWidgetsJs: String by lazy { readAsset("js/jquery.tablesorter.widgets.min.js") }

    fun buildFullHtmlDocument(title: String, bodyContent: String): String {
        val finalTitle = if (title.isBlank()) "OSRS Wiki" else title
        return """
            <!DOCTYPE html>
            <html>
            <head>
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>${finalTitle}</title>
                <style>
                    ${wikiContentCss}
                </style>
                <style>
                    ${tablesorterThemeCss}
                </style>
            </head>
            <body style="visibility: hidden;">
                $bodyContent
                <script>${jqueryJs}</script>
                <script>${tablesorterJs}</script>
                <script>${tablesorterWidgetsJs}</script>
                <script>
                    document.addEventListener('DOMContentLoaded', function() {
                        var tables = document.querySelectorAll('table.wikitable');

                        tables.forEach(function(table) {
                            if (table.parentElement.className !== 'scrollable-table-wrapper') {
                                var wrapper = document.createElement('div');
                                wrapper.className = 'scrollable-table-wrapper';
                                table.parentNode.insertBefore(wrapper, table);
                                wrapper.appendChild(table);
                            }
                        });

                        var sortableTables = $('table.wikitable.sortable');
                        if (sortableTables.length > 0) {
                             console.log("Found " + sortableTables.length + " sortable tables. Initializing tablesorter.");
                             sortableTables.each(function() {
                                var table = $(this);
                                // Ensure the table has a THEAD, creating one if necessary.
                                if (table.find('thead').length === 0) {
                                    table.prepend($('<thead></thead>').append(table.find('tr').first()));
                                }
                                // Initialize the tablesorter with the blue theme.
                                table.tablesorter({
                                    theme: 'blue',
                                    widgets: ['zebra']
                                });
                             });
                             console.log("Tablesorter initialized successfully.");
                        } else {
                            console.log("No sortable tables found.");
                        }
                    });
                </script>
            </body>
            </html>
        """.trimIndent()
    }

    private fun readAsset(assetPath: String): String {
        return try {
            context.assets.open(assetPath).use { inputStream ->
                BufferedReader(InputStreamReader(inputStream)).use { reader ->
                    reader.readText()
                }
            }
        } catch (e: Exception) {
            android.util.Log.e("PageHtmlBuilder", "Failed to read asset: $assetPath", e)
            ""
        }
    }
}
